document.addEventListener('DOMContentLoaded', function() {
    // –≠–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    tryAutoLogin();
    const authBtn = document.getElementById('auth-btn');
    const authDropdown = document.getElementById('auth-dropdown');
    const showRegister = document.getElementById('show-register');
    const registerModal = document.getElementById('register-modal');
    const loginForm = document.getElementById('login-form');
    const registerForm = document.getElementById('register-form');
    const closeModalButtons = document.querySelectorAll('.close-modal');
    const cartModal = document.getElementById('cart-modal');
    
    // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞
    const accountModal = document.createElement('div');
    accountModal.id = 'account-modal';
    accountModal.className = 'modal hidden';
    accountModal.innerHTML = `
        <div class="modal-content">
            <span class="close-modal">&times;</span>
            <h2>–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</h2>
            <div id="account-info"></div>
            <div class="order-history">
                <h3>–ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤</h3>
                <div id="orders-list"></div>
            </div>
            <button id="logout-btn" class="logout-btn">–í—ã–π—Ç–∏</button>
        </div>
    `;
    document.body.appendChild(accountModal);

    // –û—á–∏—Å—Ç–∫–∞ localStorage –æ—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    function cleanLocalStorage() {
        try {
            const userData = localStorage.getItem('currentUser');
            if (userData && userData !== "undefined") {
                JSON.parse(userData);
            }
        } catch (e) {
            localStorage.removeItem('currentUser');
        }
    }

    // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    let currentUser = null;
    cleanLocalStorage();
    
    try {
        const userData = localStorage.getItem('currentUser');
        if (userData) {
            currentUser = JSON.parse(userData);
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏—Å—Ç–æ—Ä–∏—é –∑–∞–∫–∞–∑–æ–≤, –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
            if (!currentUser.orders) {
                currentUser.orders = [];
                localStorage.setItem('currentUser', JSON.stringify(currentUser));
            }
        }
    } catch (e) {
        console.error("–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö:", e);
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–∏–¥–∞ –∫–Ω–æ–ø–∫–∏
    function updateAuthButton() {
        if (currentUser && currentUser.email) {
            authBtn.textContent = currentUser.name || currentUser.email.split('@')[0];
            authBtn.classList.add('authenticated');
            authDropdown.classList.remove('show');
        } else {
            authBtn.textContent = '–í–æ–π—Ç–∏';
            authBtn.classList.remove('authenticated');
        }
    }

    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ
    function showAccountInfo() {
        const accountInfo = accountModal.querySelector('#account-info');
        const ordersList = accountModal.querySelector('#orders-list');
        
        if (!accountInfo || !ordersList) {
            console.error('–≠–ª–µ–º–µ–Ω—Ç—ã –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
            return;
        }

        if (currentUser) {
            accountInfo.innerHTML = `
                <div class="user-info">
                    <p><strong>–ò–º—è:</strong> ${currentUser.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</p>
                    <p><strong>Email:</strong> ${currentUser.email}</p>
                    <p><strong>–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</strong> ${currentUser.registrationDate || new Date().toLocaleDateString()}</p>
                </div>
            `;
            
            if (currentUser.orders && currentUser.orders.length > 0) {
                ordersList.innerHTML = currentUser.orders.map(order => `
                    <div class="order-item">
                        <p><strong>–ó–∞–∫–∞–∑ #${order.id}</strong> (${new Date(order.date).toLocaleDateString()})</p>
                        <p>–°—É–º–º–∞: ${order.total} ‚ÇΩ</p>
                        <p>–°—Ç–∞—Ç—É—Å: ${order.status || '–ó–∞–≤–µ—Ä—à–µ–Ω'}</p>
                    </div>
                `).join('');
            } else {
                ordersList.innerHTML = '<p>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤</p>';
            }
        }
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    updateAuthButton();

    // ===== –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –°–û–ë–´–¢–ò–ô =====

    // –ö–Ω–æ–ø–∫–∞ –≤—Ö–æ–¥–∞/–≤—ã—Ö–æ–¥–∞/–∫–∞–±–∏–Ω–µ—Ç–∞
authBtn.addEventListener('click', function(e) {
  e.stopPropagation();

  if (currentUser) {
    showAccountInfo();
    accountModal.style.display = 'block';
  } else {
    authDropdown.classList.toggle('show'); // ‚úÖ —ç—Ç–æ –ø–æ–∫–∞–∂–µ—Ç –∏–ª–∏ —Å–∫—Ä–æ–µ—Ç
  }
});

    // –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ
    accountModal.querySelector('#logout-btn').addEventListener('click', function() {
        currentUser = null;
        localStorage.removeItem('currentUser');
        updateAuthButton();
        accountModal.style.display = 'none';
        alert('–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã—à–ª–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã');
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
    closeModalButtons.forEach(btn => {
        btn.addEventListener('click', function() {
            this.closest('.modal').style.display = 'none';
        });
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞
    accountModal.querySelector('.close-modal').addEventListener('click', function() {
        accountModal.style.display = 'none';
    });

    // –ü–æ–∫–∞–∑–∞—Ç—å —Ñ–æ—Ä–º—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    showRegister.addEventListener('click', function(e) {
        e.preventDefault();
        authDropdown.classList.add('show');
        registerModal.style.display = 'block';
    });
async function tryAutoLogin() {
    const token = localStorage.getItem('token');
    if (!token) return;

    try {
        const res = await fetch('https://bit-byte-3vxa.onrender.com/api/me', {
            headers: {
                'Authorization': `Bearer ${token}`
            }
        });

        if (!res.ok) throw new Error('–¢–æ–∫–µ–Ω –ø—Ä–æ—Å—Ä–æ—á–µ–Ω –∏–ª–∏ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω');

        const user = await res.json();
        localStorage.setItem('currentUser', JSON.stringify(user));
        currentUser = user;
        updateAuthButton();
        console.log('üîê –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–∑ —Ç–æ–∫–µ–Ω–∞:', user);
    } catch (err) {
        console.warn('‚õî –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Å—Å–∏—é:', err.message);
        localStorage.removeItem('token');
        localStorage.removeItem('currentUser');
        currentUser = null;
        updateAuthButton();
    }
}
    // –§–æ—Ä–º–∞ –≤—Ö–æ–¥–∞
loginForm.addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const email = this.querySelector('[type="email"]').value;
    const password = this.querySelector('[type="password"]').value;

    if (!validateEmail(email)) return alert('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email');
    if (password.length < 6) return alert('–ü–∞—Ä–æ–ª—å —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π');

    try {
        const res = await fetch('https://bit-byte-3vxa.onrender.com/api/login', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ email, password })
        });

        if (!res.ok) {
            const err = await res.json();
            throw new Error(err.message || '–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞');
        }

        const data = await res.json();
        localStorage.setItem('token', data.token);
        localStorage.setItem('currentUser', JSON.stringify(data.user));
        currentUser = data.user;

        updateAuthButton();
        authDropdown.classList.add('show');
        this.reset();
        alert(`–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${currentUser.name}!`);
    } catch (err) {
        alert('–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: ' + err.message);
    }
});

    // –§–æ—Ä–º–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
   registerForm.addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const name = this.querySelector('[type="text"]').value;
    const email = this.querySelector('[type="email"]').value;
    const password = this.querySelector('[type="password"]').value;

    if (!name || name.length < 2) return alert('–ò–º—è —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ');
    if (!validateEmail(email)) return alert('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email');
    if (password.length < 6) return alert('–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤');

    try {
        const res = await fetch('https://bit-byte-3vxa.onrender.com/api/register', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ name, email, password })
        });

        if (!res.ok) {
            const err = await res.json();
            throw new Error(err.message || '–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏');
        }

        const data = await res.json();
        localStorage.setItem('token', data.token);
        localStorage.setItem('currentUser', JSON.stringify(data.user));
        currentUser = data.user;

        updateAuthButton();
        registerModal.style.display = 'none';
        this.reset();
        alert(`–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞, ${name}!`);
    } catch (err) {
        alert('–û—à–∏–±–∫–∞: ' + err.message);
    }
});

    // –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
    document.getElementById('checkout-btn')?.addEventListener('click', function() {
const cart = JSON.parse(localStorage.getItem('cart') || '[]');
if (!Array.isArray(cart) || cart.length === 0) {
    alert('–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞ –∏–ª–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∞.');
    return;
}

        if (!currentUser) {
authDropdown.classList.remove('hidden');
authDropdown.classList.add('show');

// –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –∫–Ω–æ–ø–∫–µ –≤—Ö–æ–¥–∞ (–ø–æ –∂–µ–ª–∞–Ω–∏—é)
document.getElementById('auth-btn')?.scrollIntoView({ behavior: 'smooth', block: 'center' });
            return;
        }

        // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Å–æ–±–∞ –¥–æ—Å—Ç–∞–≤–∫–∏
        const deliveryModal = document.createElement('div');
        deliveryModal.id = 'delivery-modal';
        deliveryModal.className = 'modal';
        deliveryModal.innerHTML = `
            <div class="modal-content">
                <span class="close-modal">&times;</span>
                <h2>–°–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è</h2>
                <div class="delivery-options">
                    <div class="delivery-option">
                        <input type="radio" id="pickup" name="delivery" value="pickup" checked>
                        <label for="pickup">
                            <h3>–°–∞–º–æ–≤—ã–≤–æ–∑</h3>
                            <p>–ó–∞–±–µ—Ä–∏—Ç–µ –≤–∞—à –∑–∞–∫–∞–∑ –∏–∑ –Ω–∞—à–µ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞</p>
                            <p class="price">–ë–µ—Å–ø–ª–∞—Ç–Ω–æ</p>
                        </label>
                    </div>
                    <div class="delivery-option">
                        <input type="radio" id="delivery" name="delivery" value="delivery">
                        <label for="delivery">
                            <h3>–î–æ—Å—Ç–∞–≤–∫–∞</h3>
                            <p>–ö—É—Ä—å–µ—Ä—Å–∫–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –¥–æ –¥–≤–µ—Ä–∏</p>
                            <p class="price">500 ‚ÇΩ</p>
                        </label>
                    </div>
                </div>
                <div id="delivery-address-container" class="hidden">
                    <h3>–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏</h3>
                    <input type="text" id="delivery-address" placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∞–¥—Ä–µ—Å" required>
                </div>
                <button id="confirm-order-btn" class="confirm-order-btn">–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑</button>
            </div>
        `;
        document.body.appendChild(deliveryModal);

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        deliveryModal.style.display = 'block';
        cartModal.classList.add('hidden');

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Å–æ–±–∞ –¥–æ—Å—Ç–∞–≤–∫–∏
        deliveryModal.querySelectorAll('input[name="delivery"]').forEach(radio => {
            radio.addEventListener('change', function() {
                const addressContainer = deliveryModal.querySelector('#delivery-address-container');
                addressContainer.classList.toggle('hidden', this.value !== 'delivery');
            });
        });

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        deliveryModal.querySelector('.close-modal').addEventListener('click', function() {
            deliveryModal.style.display = 'none';
            document.body.removeChild(deliveryModal);
            cartModal.classList.remove('hidden');
        });

        // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
        deliveryModal.querySelector('#confirm-order-btn').addEventListener('click', function() {
            const deliveryType = deliveryModal.querySelector('input[name="delivery"]:checked').value;
            let deliveryAddress = '';
            let deliveryCost = 0;

            if (deliveryType === 'delivery') {
                deliveryAddress = deliveryModal.querySelector('#delivery-address').value.trim();
                if (!deliveryAddress) {
                    alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏');
                    return;
                }
                deliveryCost = 500;
            }

            const cartTotal = parseInt(document.getElementById('cart-total-price').textContent) || 0;
            const totalWithDelivery = cartTotal + deliveryCost;

            const newOrder = {
                id: Date.now(),
                date: new Date().toISOString(),
                total: totalWithDelivery,
                deliveryType: deliveryType,
                deliveryAddress: deliveryAddress,
                deliveryCost: deliveryCost,
                status: deliveryType === 'pickup' ? '–ì–æ—Ç–æ–≤ –∫ –≤—ã–¥–∞—á–µ' : '–í –æ–±—Ä–∞–±–æ—Ç–∫–µ',
                items: cart
            };

            // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            currentUser.orders = currentUser.orders || [];
            currentUser.orders.unshift(newOrder);
            localStorage.setItem('currentUser', JSON.stringify(currentUser));
            
            // –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
            localStorage.removeItem('cart');
            document.getElementById('cart-counter').textContent = '0';
            deliveryModal.style.display = 'none';
            document.body.removeChild(deliveryModal);
            cartModal.classList.add('hidden');
            
            alert(`–ó–∞–∫–∞–∑ #${newOrder.id} —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω! ${deliveryType === 'pickup' 
                ? '–í—ã –º–æ–∂–µ—Ç–µ –∑–∞–±—Ä–∞—Ç—å –µ–≥–æ –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ.' 
                : '–ö—É—Ä—å–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π.'}`);
        });
    });

    // –í–∞–ª–∏–¥–∞—Ü–∏—è email
    function validateEmail(email) {
        const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        return re.test(email);
    }

    // –ó–∞–∫—Ä—ã—Ç–∏–µ dropdown –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
document.addEventListener('click', function(e) {
    if (!authDropdown.contains(e.target) && e.target !== authBtn) {
        authDropdown.classList.remove('show');
    }
});

    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–∏—è dropdown –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω—É—Ç—Ä–∏
    authDropdown.addEventListener('click', function(e) {
        e.stopPropagation();
    });
});
